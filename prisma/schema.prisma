generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = "afalagi-bot-db.cgt846uc8bpa.us-east-1.rds.amazonaws.com"
}

model User {
  id               Int        @id @default(autoincrement())
  telegramId       BigInt     @unique
  username         String?
  isAdmin          Boolean    @default(false)
  
  // This is the one-to-one relation for the last submission
  lastSubmission   Submission? @relation("LastSubmission", fields: [lastSubmissionId], references: [id])
  lastSubmissionId Int?       @unique

  createdAt        DateTime   @default(now())
  
  // This is the one-to-many relation for all submissions
  submissions      Submission[] @relation("UserSubmissions")
}

model Question {
  id           Int        @id @default(autoincrement())
  key          String     @unique
  text         String
  confidential Boolean    @default(false)
  category     String // 'personal' or 'partner'
  answers      Answer[] // back-relation to Answer
}

model Submission {
  id         Int        @id @default(autoincrement())
  userId     Int
  
  // This is the back-relation for all submissions from a user
  user       User       @relation("UserSubmissions", fields: [userId], references: [id], onDelete: Cascade)
  
  answers    Answer[]
  status     String     @default("pending") // 'pending', 'approved', 'rejected'
  createdAt  DateTime   @default(now())
  updatedAt  DateTime   @updatedAt
  
  // This is the back-relation for the user's last submission
  lastSubmissionOf User?      @relation("LastSubmission")
}

model Answer {
  id           Int        @id @default(autoincrement())
  submissionId Int
  questionId   Int
  answer       String
  submission   Submission @relation(fields: [submissionId], references: [id])
  question     Question   @relation(fields: [questionId], references: [id])
}
